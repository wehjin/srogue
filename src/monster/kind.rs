use ncurses::chtype;
use serde::{Deserialize, Serialize};
use crate::hit::DamageStat;
use crate::monster::{MonsterFlags};
use crate::objects::{obj, object};
use crate::prelude::{get_rand};
use crate::prelude::object_what::ObjectWhat;

#[derive(Copy, Clone, Eq, PartialEq, Serialize, Deserialize)]
pub enum MonsterKind {
	Aquator,
	Bat,
	Centaur,
	Dragon,
	Emu,
	FlyTrap,
	Griffin,
	Hobgoblin,
	IceMonster,
	Jabberwock,
	Kestrel,
	Leprechaun,
	Medusa,
	Nymph,
	Orc,
	Phantom,
	Quagga,
	Rattlesnake,
	Snake,
	Troll,
	Unicorn,
	Vampire,
	Wraith,
	Xeroc,
	Yeti,
	Zombie,
}

impl From<usize> for MonsterKind {
	fn from(value: usize) -> Self { MonsterKind::LIST[value] }
}

impl MonsterKind {
	pub fn random_any() -> Self {
		Self::LIST[get_rand(0, MONSTERS - 1)]
	}
	pub fn random(level_depth: usize, level_boost: usize) -> Self {
		loop {
			let mn = get_rand(0, MonsterKind::LIST.len() - 1);
			let kind = MonsterKind::from(mn);
			let first_level = {
				let nominal = kind.first_level();
				let boost = level_boost.min(nominal);
				nominal - boost
			};
			if level_depth >= first_level && level_depth <= kind.last_level() {
				return kind;
			}
		}
	}
	pub fn damage(&self) -> &'static [DamageStat] {
		match self {
			MonsterKind::Aquator => &[DamageStat { hits: 0, damage: 0 }],
			MonsterKind::Bat => &[DamageStat { hits: 1, damage: 3 }],
			MonsterKind::Centaur => &[DamageStat { hits: 3, damage: 3 }, DamageStat { hits: 2, damage: 5 }],
			MonsterKind::Dragon => &[DamageStat { hits: 4, damage: 6 }, DamageStat { hits: 4, damage: 9 }],
			MonsterKind::Emu => &[DamageStat { hits: 1, damage: 3 }],
			MonsterKind::FlyTrap => &[DamageStat { hits: 5, damage: 5 }],
			MonsterKind::Griffin => &[DamageStat { hits: 5, damage: 5 }, DamageStat { hits: 5, damage: 5 }],
			MonsterKind::Hobgoblin => &[DamageStat { hits: 1, damage: 3 }, DamageStat { hits: 1, damage: 2 }],
			MonsterKind::IceMonster => &[DamageStat { hits: 0, damage: 0 }],
			MonsterKind::Jabberwock => &[DamageStat { hits: 3, damage: 10 }, DamageStat { hits: 4, damage: 5 }],
			MonsterKind::Kestrel => &[DamageStat { hits: 1, damage: 4 }],
			MonsterKind::Leprechaun => &[DamageStat { hits: 0, damage: 0 }],
			MonsterKind::Medusa => &[DamageStat { hits: 4, damage: 4 }, DamageStat { hits: 3, damage: 7 }],
			MonsterKind::Nymph => &[DamageStat { hits: 0, damage: 0 }],
			MonsterKind::Orc => &[DamageStat { hits: 1, damage: 6 }],
			MonsterKind::Phantom => &[DamageStat { hits: 5, damage: 4 }],
			MonsterKind::Quagga => &[DamageStat { hits: 3, damage: 5 }],
			MonsterKind::Rattlesnake => &[DamageStat { hits: 2, damage: 5 }],
			MonsterKind::Snake => &[DamageStat { hits: 1, damage: 3 }],
			MonsterKind::Troll => &[DamageStat { hits: 4, damage: 6 }, DamageStat { hits: 1, damage: 4 }],
			MonsterKind::Unicorn => &[DamageStat { hits: 4, damage: 10 }],
			MonsterKind::Vampire => &[DamageStat { hits: 1, damage: 14 }, DamageStat { hits: 1, damage: 4 }],
			MonsterKind::Wraith => &[DamageStat { hits: 2, damage: 8 }],
			MonsterKind::Xeroc => &[DamageStat { hits: 4, damage: 6 }],
			MonsterKind::Yeti => &[DamageStat { hits: 3, damage: 6 }],
			MonsterKind::Zombie => &[DamageStat { hits: 1, damage: 7 }],
		}
	}
	pub fn hp_to_kill(&self) -> isize {
		MONSTER_TABLE[self.index()].quantity as isize
	}
	pub fn random_name() -> &'static str {
		let random_kind = MonsterKind::LIST[get_rand(0, MonsterKind::LIST.len() - 1)];
		random_kind.name()
	}
	pub fn first_level(&self) -> usize {
		MONSTER_TABLE[self.index()].is_protected as usize
	}
	pub fn last_level(&self) -> usize {
		MONSTER_TABLE[self.index()].is_cursed as usize
	}
	pub fn kill_exp(&self) -> isize {
		MONSTER_TABLE[self.index()].kill_exp
	}
	pub fn m_char(&self) -> chtype { chtype::from(self.screen_char()) }
	pub fn m_hit_chance(&self) -> usize {
		MONSTER_TABLE[self.index()].class as usize
	}
	pub fn name(&self) -> &'static str {
		match self {
			MonsterKind::Aquator => "aquator",
			MonsterKind::Bat => "bat",
			MonsterKind::Centaur => "centaur",
			MonsterKind::Dragon => "dragon",
			MonsterKind::Emu => "emu",
			MonsterKind::FlyTrap => "venus fly-trap",
			MonsterKind::Griffin => "griffin",
			MonsterKind::Hobgoblin => "hobgoblin",
			MonsterKind::IceMonster => "ice monster",
			MonsterKind::Jabberwock => "jabberwock",
			MonsterKind::Kestrel => "kestrel",
			MonsterKind::Leprechaun => "leprechaun",
			MonsterKind::Medusa => "medusa",
			MonsterKind::Nymph => "nymph",
			MonsterKind::Orc => "orc",
			MonsterKind::Phantom => "phantom",
			MonsterKind::Quagga => "quagga",
			MonsterKind::Rattlesnake => "rattlesnake",
			MonsterKind::Snake => "snake",
			MonsterKind::Troll => "troll",
			MonsterKind::Unicorn => "black unicorn",
			MonsterKind::Vampire => "vampire",
			MonsterKind::Wraith => "wraith",
			MonsterKind::Xeroc => "xeroc",
			MonsterKind::Yeti => "yeti",
			MonsterKind::Zombie => "zombie",
		}
	}
	pub fn screen_char(&self) -> char {
		match self {
			MonsterKind::Aquator => 'A',
			MonsterKind::Bat => 'B',
			MonsterKind::Centaur => 'C',
			MonsterKind::Dragon => 'D',
			MonsterKind::Emu => 'E',
			MonsterKind::FlyTrap => 'F',
			MonsterKind::Griffin => 'G',
			MonsterKind::Hobgoblin => 'H',
			MonsterKind::IceMonster => 'I',
			MonsterKind::Jabberwock => 'J',
			MonsterKind::Kestrel => 'K',
			MonsterKind::Leprechaun => 'L',
			MonsterKind::Medusa => 'M',
			MonsterKind::Nymph => 'N',
			MonsterKind::Orc => 'O',
			MonsterKind::Phantom => 'P',
			MonsterKind::Quagga => 'Q',
			MonsterKind::Rattlesnake => 'R',
			MonsterKind::Snake => 'S',
			MonsterKind::Troll => 'T',
			MonsterKind::Unicorn => 'U',
			MonsterKind::Vampire => 'V',
			MonsterKind::Wraith => 'W',
			MonsterKind::Xeroc => 'X',
			MonsterKind::Yeti => 'Y',
			MonsterKind::Zombie => 'Z',
		}
	}
	pub fn flags(&self) -> MonsterFlags {
		match self {
			MonsterKind::Aquator => MonsterFlags::a(),
			MonsterKind::Bat => MonsterFlags::b(),
			MonsterKind::Centaur => MonsterFlags::c(),
			MonsterKind::Dragon => MonsterFlags::d(),
			MonsterKind::Emu => MonsterFlags::e(),
			MonsterKind::FlyTrap => MonsterFlags::f(),
			MonsterKind::Griffin => MonsterFlags::g(),
			MonsterKind::Hobgoblin => MonsterFlags::h(),
			MonsterKind::IceMonster => MonsterFlags::i(),
			MonsterKind::Jabberwock => MonsterFlags::j(),
			MonsterKind::Kestrel => MonsterFlags::k(),
			MonsterKind::Leprechaun => MonsterFlags::l(),
			MonsterKind::Medusa => MonsterFlags::m(),
			MonsterKind::Nymph => MonsterFlags::n(),
			MonsterKind::Orc => MonsterFlags::o(),
			MonsterKind::Phantom => MonsterFlags::p(),
			MonsterKind::Quagga => MonsterFlags::q(),
			MonsterKind::Rattlesnake => MonsterFlags::r(),
			MonsterKind::Snake => MonsterFlags::s(),
			MonsterKind::Troll => MonsterFlags::t(),
			MonsterKind::Unicorn => MonsterFlags::u(),
			MonsterKind::Vampire => MonsterFlags::v(),
			MonsterKind::Wraith => MonsterFlags::w(),
			MonsterKind::Xeroc => MonsterFlags::x(),
			MonsterKind::Yeti => MonsterFlags::y(),
			MonsterKind::Zombie => MonsterFlags::z(),
		}
	}
	pub fn index(&self) -> usize {
		match self {
			MonsterKind::Aquator => 0,
			MonsterKind::Bat => 1,
			MonsterKind::Centaur => 2,
			MonsterKind::Dragon => 3,
			MonsterKind::Emu => 4,
			MonsterKind::FlyTrap => 5,
			MonsterKind::Griffin => 6,
			MonsterKind::Hobgoblin => 7,
			MonsterKind::IceMonster => 8,
			MonsterKind::Jabberwock => 9,
			MonsterKind::Kestrel => 10,
			MonsterKind::Leprechaun => 11,
			MonsterKind::Medusa => 12,
			MonsterKind::Nymph => 13,
			MonsterKind::Orc => 14,
			MonsterKind::Phantom => 15,
			MonsterKind::Quagga => 16,
			MonsterKind::Rattlesnake => 17,
			MonsterKind::Snake => 18,
			MonsterKind::Troll => 19,
			MonsterKind::Unicorn => 20,
			MonsterKind::Vampire => 21,
			MonsterKind::Wraith => 22,
			MonsterKind::Xeroc => 23,
			MonsterKind::Yeti => 24,
			MonsterKind::Zombie => 25,
		}
	}
	pub const LIST: [MonsterKind; 26] = [
		MonsterKind::Aquator, MonsterKind::Bat, MonsterKind::Centaur, MonsterKind::Dragon, MonsterKind::Emu, MonsterKind::FlyTrap,
		MonsterKind::Griffin, MonsterKind::Hobgoblin, MonsterKind::IceMonster, MonsterKind::Jabberwock, MonsterKind::Kestrel, MonsterKind::Leprechaun,
		MonsterKind::Medusa, MonsterKind::Nymph, MonsterKind::Orc, MonsterKind::Phantom, MonsterKind::Quagga, MonsterKind::Rattlesnake,
		MonsterKind::Snake, MonsterKind::Troll, MonsterKind::Unicorn, MonsterKind::Vampire, MonsterKind::Wraith, MonsterKind::Xeroc,
		MonsterKind::Yeti, MonsterKind::Zombie,
	];
}

const MONSTER_TABLE: [object; 26] = [
	obj {
		quantity: 25,
		ichar: 'A',
		kill_exp: 20,
		is_protected: 9,
		is_cursed: 18,
		class: 100,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 10,
		ichar: 'B',
		kill_exp: 2,
		is_protected: 1,
		is_cursed: 8,
		class: 60,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 32,
		ichar: 'C',
		kill_exp: 15,
		is_protected: 7,
		is_cursed: 16,
		class: 85,
		identified: false,
		which_kind: 10,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 145,
		ichar: 'D',
		kill_exp: 5000,
		is_protected: 21,
		is_cursed: 126,
		class: 100,
		identified: false,
		which_kind:
		90,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 11,
		ichar: 'E',
		kill_exp: 2,
		is_protected: 1,
		is_cursed: 7,
		class: 65,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 73,
		ichar: 'F',
		kill_exp: 91,
		is_protected: 12,
		is_cursed: 126,
		class: 80,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 115,
		ichar: 'G',
		kill_exp: 2000,
		is_protected: 20,
		is_cursed: 126,
		class: 85,
		identified: false,
		which_kind:
		10,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 15,
		ichar: 'H',
		kill_exp: 3,
		is_protected: 1,
		is_cursed: 10,
		class: 67,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 15,
		ichar: 'I',
		kill_exp: 5,
		is_protected: 2,
		is_cursed: 11,
		class: 68,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 132,
		ichar: 'J',
		kill_exp: 3000,
		is_protected: 21,
		is_cursed: 126,
		class: 100,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 10,
		ichar: 'K',
		kill_exp: 2,
		is_protected: 1,
		is_cursed: 6,
		class: 60,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 25,
		ichar: 'L',
		kill_exp: 21,
		is_protected: 6,
		is_cursed: 16,
		class: 75,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 97,
		ichar: 'M',
		kill_exp: 250,
		is_protected: 18,
		is_cursed: 126,
		class: 85,
		identified: false,
		which_kind:
		25,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 25,
		ichar: 'N',
		kill_exp: 39,
		is_protected: 10,
		is_cursed: 19,
		class: 75,
		identified: false,
		which_kind:
		100,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 25,
		ichar: 'O',
		kill_exp: 5,
		is_protected: 4,
		is_cursed: 13,
		class: 70,
		identified: false,
		which_kind:
		10,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 76,
		ichar: 'P',
		kill_exp: 120,
		is_protected: 15,
		is_cursed: 24,
		class: 80,
		identified: false,
		which_kind:
		50,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 30,
		ichar: 'Q',
		kill_exp: 20,
		is_protected: 8,
		is_cursed: 17,
		class: 78,
		identified: false,
		which_kind:
		20,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 19,
		ichar: 'R',
		kill_exp: 10,
		is_protected: 3,
		is_cursed: 12,
		class: 70,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 8,
		ichar: 'S',
		kill_exp: 2,
		is_protected: 1,
		is_cursed: 9,
		class: 50,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 75,
		ichar: 'T',
		kill_exp: 125,
		is_protected: 13,
		is_cursed: 22,
		class: 75,
		identified: false,
		which_kind:
		33,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 90,
		ichar: 'U',
		kill_exp: 200,
		is_protected: 17,
		is_cursed: 26,
		class: 85,
		identified: false,
		which_kind:
		33,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 55,
		ichar: 'V',
		kill_exp: 350,
		is_protected: 19,
		is_cursed: 126,
		class: 85,
		identified: false,
		which_kind:
		18,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 45,
		ichar: 'W',
		kill_exp: 55,
		is_protected: 14,
		is_cursed: 23,
		class: 75,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 42,
		ichar: 'X',
		kill_exp: 110,
		is_protected: 16,
		is_cursed: 25,
		class: 75,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 35,
		ichar: 'Y',
		kill_exp: 50,
		is_protected: 11,
		is_cursed: 20,
		class: 80,
		identified: false,
		which_kind:
		20,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
	obj {
		quantity: 21,
		ichar: 'Z',
		kill_exp: 8,
		is_protected: 5,
		is_cursed: 14,
		class: 69,
		identified: false,
		which_kind: 0,
		o_row: 0,
		o_col: 0,
		o: 0,
		row: 0,
		col: 0,
		d_enchant: 0,
		quiver: 0,
		trow: 0,
		tcol: 0,
		hit_enchant: 0,
		what_is: ObjectWhat::None,
		picked_up: 0,
		in_use_flags: 0,
		next_object: 0 as *const obj as *mut obj,
	},
];

pub const MONSTERS: usize = 26;
